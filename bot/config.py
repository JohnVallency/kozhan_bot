import logging
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from datetime import datetime, timedelta
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_CHAT_ID = int(os.getenv("ADMIN_CHAT_ID"))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode="HTML")
)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
user_last_action = {}
user_valentines_count = {}

# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM
class ValentineStates(StatesGroup):
    waiting_for_sender_name = State()  # –ö–∞–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è –ø–æ–ª—É—á–∞—Ç–µ–ª—é
    waiting_for_recipient_username = State()  # @username –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    waiting_for_recipient_fullname = State()  # –ò–º—è –§–∞–º–∏–ª–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    waiting_for_text = State()  # –¢–µ–∫—Å—Ç –ö–æ–∂–∞–Ω–∫–∏

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text="üíå –°–æ–∑–¥–∞—Ç—å –ö–æ–∂–∞–Ω–∫—É"))
    builder.add(types.KeyboardButton(text="üìã –ü—Ä–∞–≤–∏–ª–∞"))
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º (10 —Å–µ–∫—É–Ω–¥)
def is_too_fast(user_id):
    now = datetime.now()
    last_action_time = user_last_action.get(user_id)
    if last_action_time and (now - last_action_time) < timedelta(seconds=1):
        return True
    user_last_action[user_id] = now
    return False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –ö–æ–∂–∞–Ω–æ–∫
def check_valentine_limit(user_id):
    return user_valentines_count.get(user_id, 0) < 2

# –ü–æ–ª—É—á–µ–Ω–∏–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_username(user: types.User):
    if user.username:
        return f"@{user.username}"
    return "–Ω–µ—Ç username"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    welcome_text = """
üíò <b>Kozhan Bot</b> üíò

–û—Ç–ø—Ä–∞–≤—å –∞–Ω–æ–Ω–∏–º–Ω—É—é –ö–æ–∂–∞–Ω–∫—É –¥—Ä—É–≥—É –∏–ª–∏ –∑–Ω–∞–∫–æ–º–æ–º—É!

‚ú® <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1. –¢—ã –ø–∏—à–µ—à—å —Å–æ–æ–±—â–µ–Ω–∏–µ
2. –£–∫–∞–∑—ã–≤–∞–µ—à—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
3. –ú—ã –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ö–æ–∂–∞–Ω–∫—É
4. –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Ä–∞–¥—É–µ—Ç—Å—è!

<b>–í—Å—ë –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω–æ!</b> –¢–≤–æ–µ –∏–º—è –Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç.
"""
    await message.answer(welcome_text, reply_markup=get_main_menu_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –ö–æ–∂–∞–Ω–∫—É"
@dp.message(F.text.lower() == "üíå —Å–æ–∑–¥–∞—Ç—å –∫–æ–∂–∞–Ω–∫—É")
async def create_valentine(message: types.Message, state: FSMContext):
    if is_too_fast(message.from_user.id):
        await message.answer("‚è≥ –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º. –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–ø–∞–º–∞, –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª 1 —Å–µ–∫—É–Ω–¥–∞.")
        return
    
    if not check_valentine_limit(message.from_user.id):
        await message.answer("‚ùå –¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª(–∞) –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ö–æ–∂–∞–Ω–æ–∫ (2).")
        return
    
    info_text = """
‚úèÔ∏è <b>–®–∞–≥ 1 –∏–∑ 4:</b> –ö–∞–∫ —Ç–µ–±—è –Ω–∞–∑–≤–∞—Ç—å –≤ –ö–æ–∂–∞–Ω–∫–µ?

üìù –ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ "–¢–≤–æ–π —Ç–∞–π–Ω—ã–π –ø–æ–∫–ª–æ–Ω–Ω–∏–∫"
‚Ä¢ "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –¥—Ä—É–≥"
‚Ä¢ "–ö—Ç–æ-—Ç–æ –∏–∑ –≥—Ä—É–ø–ø—ã"

‚ÑπÔ∏è <i>–ò–º–µ–Ω–Ω–æ —ç—Ç–æ –∏–º—è —É–≤–∏–¥–∏—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—å –≤–º–µ—Å—Ç–æ —Ç–≤–æ–µ–≥–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ!</i>
"""
    await message.answer(info_text, reply_markup=ReplyKeyboardRemove())
    await state.set_state(ValentineStates.waiting_for_sender_name)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
@dp.message(ValentineStates.waiting_for_sender_name)
async def process_sender_name(message: types.Message, state: FSMContext):
    if is_too_fast(message.from_user.id):
        await message.answer("‚è≥ –ü–æ–¥–æ–∂–¥–∏ 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º.")
        return
    
    if len(message.text) > 50:
        await message.answer("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –∏–º—è (–º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤). –ü—Ä–∏–¥—É–º–∞–π —á—Ç–æ-—Ç–æ –ø–æ–∫–æ—Ä–æ—á–µ.")
        return
    
    await state.update_data(sender_name=message.text)
    
    info_text = """
‚úèÔ∏è <b>–®–∞–≥ 2 –∏–∑ 4:</b> –í–≤–µ–¥–∏ @username –ø–æ–ª—É—á–∞—Ç–µ–ª—è

üìù –ü—Ä–∏–º–µ—Ä: @username –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ username

‚ÑπÔ∏è –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å username, –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å "–Ω–µ –∑–Ω–∞—é" –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.
"""
    await message.answer(info_text)
    await state.set_state(ValentineStates.waiting_for_recipient_username)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ username –ø–æ–ª—É—á–∞—Ç–µ–ª—è
@dp.message(ValentineStates.waiting_for_recipient_username)
async def process_recipient_username(message: types.Message, state: FSMContext):
    if is_too_fast(message.from_user.id):
        await message.answer("‚è≥ –ü–æ–¥–æ–∂–¥–∏ 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º.")
        return
    
    username = message.text.replace("@", "") if message.text.lower() != "–Ω–µ –∑–Ω–∞—é" else "–Ω–µ —É–∫–∞–∑–∞–Ω"
    await state.update_data(recipient_username=username)
    
    info_text = """
‚úèÔ∏è <b>–®–∞–≥ 3 –∏–∑ 4:</b> –í–≤–µ–¥–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –ø–æ–ª—É—á–∞—Ç–µ–ª—è

üìù –ü—Ä–∏–º–µ—Ä—ã:
‚Ä¢ "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞"
‚Ä¢ "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
‚Ä¢ "–ú–∞—Ä–∏—è" (–µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ñ–∞–º–∏–ª–∏—é)

‚ÑπÔ∏è –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –ö–æ–∂–∞–Ω–∫–∏.
"""
    await message.answer(info_text)
    await state.set_state(ValentineStates.waiting_for_recipient_fullname)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è
@dp.message(ValentineStates.waiting_for_recipient_fullname)
async def process_recipient_fullname(message: types.Message, state: FSMContext):
    if is_too_fast(message.from_user.id):
        await message.answer("‚è≥ –ü–æ–¥–æ–∂–¥–∏ 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º.")
        return
    
    if len(message.text) > 100:
        await message.answer("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –∏–º—è (–º–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏.")
        return
    
    await state.update_data(recipient_fullname=message.text)
    
    info_text = """
‚úèÔ∏è <b>–®–∞–≥ 4 –∏–∑ 4:</b> –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –ö–æ–∂–∞–Ω–∫–∏

üìù –ü—Ä–∏–º–µ—Ä:
"–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç—ã –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫! –£–¥–∞—á–∏ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–∞—Ö!"

‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
- –ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤
- –ë–µ–∑ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π
"""
    await message.answer(info_text)
    await state.set_state(ValentineStates.waiting_for_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ –ö–æ–∂–∞–Ω–∫–∏
@dp.message(ValentineStates.waiting_for_text)
async def process_text(message: types.Message, state: FSMContext):
    if is_too_fast(message.from_user.id):
        await message.answer("‚è≥ –ü–æ–¥–æ–∂–¥–∏ 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º.")
        return
    
    if len(message.text) > 500:
        await message.answer("‚ùå –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤). –°–æ–∫—Ä–∞—Ç–∏ –µ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")
        return
    
    user_data = await state.get_data()
    await state.clear()
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ö–æ–∂–∞–Ω–æ–∫
    user_id = message.from_user.id
    user_valentines_count[user_id] = user_valentines_count.get(user_id, 0) + 1
    
    # –ü–æ–ª—É—á–∞–µ–º username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    sender_username = get_user_username(message.from_user)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
    admin_message = (
        f"üíå –ù–æ–≤–∞—è –ö–æ–∂–∞–Ω–∫–∞!\n\n"
        f"üì© –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_username}\n"
        f"üë§ –ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –≤ –ö–æ–∂–∞–Ω–∫–µ: {user_data['sender_name']}\n"
        f"üéØ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {user_data['recipient_fullname']}\n"
        f"üì± Username –ø–æ–ª—É—á–∞—Ç–µ–ª—è: @{user_data['recipient_username']}\n"
        f"‚úâÔ∏è –¢–µ–∫—Å—Ç:\n<i>{message.text}</i>\n\n"
        f"üìä –í—Å–µ–≥–æ –ö–æ–∂–∞–Ω–æ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_valentines_count[user_id]}/2"
    )
    
    try:
        await bot.send_message(ADMIN_CHAT_ID, admin_message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        return
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    remaining = 2 - user_valentines_count[user_id]
    success_text = f"""
üéâ <b>–ö–æ–∂–∞–Ω–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</b>

<b>–¢–≤–æ–µ –∏–º—è –≤ –ö–æ–∂–∞–Ω–∫–µ:</b> {user_data['sender_name']}
<b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> {user_data['recipient_fullname']}
<b>Username –ø–æ–ª—É—á–∞—Ç–µ–ª—è:</b> @{user_data['recipient_username']}

üìú <b>–¢–µ–∫—Å—Ç:</b>
<i>{message.text}</i>

üíå –ö–æ–∂–∞–Ω–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
üîÑ –û—Å—Ç–∞–ª–æ—Å—å –ö–æ–∂–∞–Ω–æ–∫: {remaining}/2
"""
    await message.answer(success_text, reply_markup=get_main_menu_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_other_messages(message: types.Message):
    if is_too_fast(message.from_user.id):
        return
    
    await message.answer(
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /help",
        reply_markup=get_main_menu_keyboard()
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    logger.info("Starting bot...")
    import asyncio
    asyncio.run(main())